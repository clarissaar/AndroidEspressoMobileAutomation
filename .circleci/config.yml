version: 2
jobs:
dependencies:
    pre:
    # Make sure we have the sdkmanager available, and update the Android SDK tools if not
      - if [ ! -e $ANDROID_HOME/tools/bin/sdkmanager ]; then echo y | android update sdk --no-ui --all --filter tools; fi
        
        # Pre-accept Android SDK components licenses
      - mkdir "$ANDROID_HOME/licenses" || true
      - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"

        # Install all the required SDK components
      - $ANDROID_HOME/tools/bin/sdkmanager --verbose "platform-tools" "build-tools;"$ANDROID_BUILD_TOOLS "extras;google;m2repository"
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-28
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}
      - run:
           name: Chmod permissions
           command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}
      - run:
          name: remove local settings
          command: rm local.properties
      - run:
          name: Setup emulator
          command: sdkmanager "system-images;android-22;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-22;default;armeabi-v7a"
      - run:
          name: Launch emulator
          command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel on
          background: true

      - run:
          name: Run Tests
          command: ./gradlew lint test

      - run:
          name: waiting for system to boot
          command: circle-android wait-for-boot
                   sleep 30
                   adb shell input keyevent 82
      - run:
          name: Run Instrument Tests MyTaxi
          command:  ./gradlew connectedAndroidTest --stacktrace


      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results

#      - emulator -avd circleci-android22 -no-audio -no-window:
#          background: true
#          parallel: true
#      - circle-android wait-for-boot
#      - sleep 30
#    # Unlock the screen
#      - adb shell input keyevent 82
#    # Run espresso tests
#      - ./gradlew :app:connectedDebugAndroidTest -PdisablePreDex;
